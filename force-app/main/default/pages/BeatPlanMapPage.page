<apex:page standardStylesheets="false" lightningStylesheets="true" controller="BeatPlanMapPageController" showHeader="false">
 <apex:slds />

    <head>
        <meta charset="utf-8" />
        <meta http-equiv="x-ua-compatible" content="ie=edge" />
        <title>DCR</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <!-- Import the Design System style sheet -->
        <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
        <link href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css" />
        <script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>

        <style>
            #sidebar-wrapper {
  top: 52px;
  left: -200px;
  width: 200px;
  background:rgb(255,255,255,0.4);
  color: white;
  position: fixed;
  height: 100%;
  z-index: 1;
}
.sidebar-nav {
  position: absolute;
  top: 0;
  margin: 0;
  padding: 0;
  width: 250px;
  list-style: none;
}
.sidebar-nav li {
  text-indent: 20px;
  line-height: 50px;
}
.sidebar-nav li a {
  color: white;
  display: block;
  text-decoration: none;
}
.sidebar-nav li a:hover {
  background: rgba(0,0,255,0.3);
  color: white;
  text-decoration: none;
}
.sidebar-nav li a:active, .sidebar-nav li a:focus {
  text-decoration: none;
}
#sidebar-wrapper.sidebar-toggle {
  transition: all 0.3s ease-out;
  margin-left: -200px;
  overflow:scroll;

}
@media (min-width: 768px) {
  #sidebar-wrapper.sidebar-toggle {
    transition: 0s;
    left: 200px;
  }

}

.btn {
    border: none;
    color: white;
    padding: 12px 16px;
    font-size: 16px;
    cursor: pointer;
}

/* Darker background on mouse-over */
.btn:hover {
    background-color: #4169E1;
}
</style>
        <script>
            $(window).resize(function() {
    var path = $(this);
    var contW = path.width();
    if(contW >= 751){
        document.getElementsByClassName("sidebar-toggle")[0].style.left="200px";
    }else{
        document.getElementsByClassName("sidebar-toggle")[0].style.left="-200px";
    }
});
$(document).ready(function() {
    $('.dropdown').on('show.bs.dropdown', function(e){
        $(this).find('.dropdown-menu').first().stop(true, true).slideDown(300);
    });
    $('.dropdown').on('hide.bs.dropdown', function(e){
        $(this).find('.dropdown-menu').first().stop(true, true).slideUp(300);
    });
    $("#menu-toggle").click(function(e) {
        e.preventDefault();
        var elem = document.getElementById("sidebar-wrapper");
        left = window.getComputedStyle(elem,null).getPropertyValue("left");
        if(left == "200px"){
            document.getElementsByClassName("sidebar-toggle")[0].style.left="-200px";
        }
        else if(left == "-200px"){
            document.getElementsByClassName("sidebar-toggle")[0].style.left="200px";
        }
    });
});
</script>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <!-- Add icon library -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />


        <meta charset="utf-8" />
        <meta http-equiv="x-ua-compatible" content="ie=edge" />
        <title>Salesforce Google Map</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
        <script src="{!URLFOR($Resource.aljs,'/jquery.aljs-all-with-moment.min.js')}" />
        <script src="https://rawgithub.com/gsklee/ngStorage/master/ngStorage.js"></script>
        <link href = "https://code.jquery.com/ui/1.12.0/themes/ui-lightness/jquery-ui.css" rel = "stylesheet"/>
        <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css" />
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />


        <meta name="viewport" content="width=device-width, initial-scale=1" />
<style>
.card{
           margin-top:5px;
           margin-left:20px;
       }

    .cards {
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
    transition: 0.3s;
    width: 95%;
    background:rgba(0,0,0,0.4);
    margin-top:10px;
}

.cards:hover {
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
}

.container {
    padding: 2px 16px;
}
.test:after {
  content: '\2807';
  font-size: 20px;
  }
   html, body, .container,  #map {
    width: 100%;
    height: 96.5%;
    margin: 0;
    padding: 0;
}

.se-pre-con {
    position: fixed;
    left: 0px;
    top: 0px;
    width: 100%;
    height: 100%;
    z-index: 9999;
    background: url("{!$Resource.biotech_Logo}") center no-repeat #fff;
    background-size: 300px 100px;
}
</style>
    </head>

    <body ng-app="myApp" ng-controller="myCtrl">
        <input type="hidden" id="checkIn_flag" /> <!--Checkin flag for restriction -->
            <div class="se-pre-con"></div>
        <nav class="navbar navbar-default" role="navigation">
            <div class="container">
                <div class="navbar-header" style="background:#325CAB">
                    <a id="menu-toggle" href="#" class="navbar-toggle">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </a>
                    <span class="navbar-brand" href="home.xhtml" style="color:white">
                        Today Activity
                    </span>
                    <button id='end_my_day' disabled="true" ng-click="endMyDay();" class="slds-button slds-button_outline-brand" style="margin-top:14px;float:right;margin-right:4px">End</button>
                    <button ng-click="startMyDay()" id='start_my_day' class="slds-button slds-button_outline-brand" style="margin-top:14px;float:right;margin-right:3px">Start</button>
                </div>
                <div id="sidebar-wrapper" class="sidebar-toggle" style="margin-bottom:100px;height:82%">
                     <center>
                <h1 style="background:#ECF0F1; color:#777; height:20px ; font-size:20px; font-family:times and roman">Visits</h1>
                <div id="sortable" >
                    <dl class="dl-horizontal" ng-repeat="ev in eventList" >
                        <div class="cards" id="{{ev.Id}}" start="{{ev.StartDateTime}}" end="{{ev.EndDateTime}}">
                                <div>
                                    <div class="test ; handle" style="float:right;color:white"></div>
                                    <center><b><span id='' style="color:white">{{ev.Account__r.Name}}</span></b></center>
                                    <label style="color:#ECF0F1">Address :</label><span id="Address" style="color:#ECF0F1">{{ev.Account__r.BillingStreet}},{{ev.Account__r.BillingCity}}</span>
                                </div>
                            <div class="float-right">
                                <button id="{{'_i'+ev.Id}}" class="slds-button slds-button_success" disabled="true" ng-click="checkIn(ev.Id)">
                                    Check IN
                                </button>
                                <button class="slds-button slds-button_destructive" ng-click="checkOut(ev.Id)" disabled='true' id="{{'_o'+ev.Id}}">
                                    Check Out
                                </button>
                            </div>
                        </div>
                    </dl>
                </div>
            </center>
                </div>
            </div>
        </nav>
        <div class="container" style="margin-top:-18px; margin-left:2px;margin-right:2px;margin-bottom:3px">
            <div id="map"></div>
        </div>
        <!-- Prompt For Message -->
            <div class="promt slds-hide" style="height: 24rem;">
                <input type="hidden" id="proValue"/>
                <section role="alertdialog" tabindex="-1" aria-labelledby="prompt-heading-id" aria-describedby="prompt-message-wrapper" class="slds-modal slds-fade-in-open slds-modal_prompt" aria-modal="true">
                  <div class="slds-modal__container">
                    <header class="slds-modal__header slds-theme_success slds-theme_alert-texture">
                      <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close">
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                          <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                      </button>
                      <h2 class="slds-text-heading_medium" id="prompt-heading-id">Confirmation</h2>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" id="prompt-message-wrapper">
                      <p id="proMsg"></p>
                    </div>
                    <footer class="slds-modal__footer slds-theme_default">
                      <button class="slds-button slds-button_neutral" ng-click="hidePopup('promt')">Okay</button>
                    </footer>
                  </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
        <!-- Prompt For Message ends -->
       <!-- event update modal -->
       <div class="eventUpdateModal slds-hide" style="height: 640px;">
           <input type="hidden" id="eventId"/>
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
          <div class="slds-modal__container">
            <header class="slds-modal__header">
              <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" ng-click="hidePopup('eventUpdateModal')">
                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                  <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                </svg>
                <span class="slds-assistive-text">Close</span>
              </button>
              <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate">Update Event</h2>
            </header>
            <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                <div class="demo-only demo-only--sizing slds-grid slds-wrap">
                    <div class="slds-size_1-of-2 slds-p-around_x-small">
                        <label class="slds-form-element__label">Start Time</label><br></br>
                        <input type="time" class="slds-input" id="startTime"/>
                        
                        <div class="slds-form-element">
                            <input type="text" style="display:none"/>
                            <label class="slds-form-element__label" for="text-input-id-1">Date</label>
                            <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right">
                                <svg onclick="setIcon();" class="slds-icon slds-input__icon slds-input__icon_right slds-icon-text-default" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#event')}" />
                                </svg>
                                <input id="clickDate" onclick="setIcon();" class="slds-input selectedDate" type="text" placeholder="Pick a Date" />
                            </div>
                        </div>
                    </div>
                    <div class="slds-size_1-of-2 slds-p-around_x-small">
                        <label class="slds-form-element__label">End Time</label><br></br>
                        <input type="time" class="slds-input" id="endTime"/> 
                        
                        <div class="slds-form-element">
                            <label class="slds-form-element__label" for="textarea-id-01">reason</label>
                            <div class="slds-form-element__control">
                                <textarea id="reason" class="slds-textarea" placeholder="Reason"></textarea>
                            </div>
                        </div>

                    </div>
                </div>       
            </div>
            <footer class="slds-modal__footer">
              <button class="slds-button slds-button_neutral" id="revert" ng-click="hidePopup('eventUpdateModal')">Cancel</button>
              <button class="slds-button slds-button_brand" ng-click="updateEvent('update')">Save</button>
              <button class="slds-button slds-button_destructive" ng-click="updateEvent('cancel')">Cancel Event</button>
            </footer>
          </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
      </div>
       <!-- event modal end -->
       <!-- warning prompt -->
       <div class="warning demo-only slds-hide" style="height: 24rem;">
        <section role="alertdialog" tabindex="-1" aria-labelledby="prompt-heading-id" aria-describedby="prompt-message-wrapper" class="slds-modal slds-fade-in-open slds-modal_prompt" aria-modal="true">
          <div class="slds-modal__container">
            <header class="slds-modal__header slds-theme_error slds-theme_alert-texture">
              <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" ng-click="hidePopup('warning')">
                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                  <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                </svg>
                <span class="slds-assistive-text">Close</span>
              </button>
              <h2 class="slds-text-heading_medium" id="prompt-heading-id">warning</h2>
            </header>
            <div class="slds-modal__content slds-p-around_medium" id="prompt-message-wrapper">
              <p id="warn"></p>
            </div>
            <footer class="slds-modal__footer slds-theme_default">
              <button class="slds-button slds-button_neutral" ng-click="hidePopup('warning')">Okay</button>
            </footer>
          </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
      </div>
      <!-- warning promt -->
       <!--Spinner-->
       <div class="spinner slds-hide" style="background-color: rgb(22, 50, 92); height: 6rem;">
        <div class="slds-spinner_container slds-spinner_brand">
          <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
            <span class="slds-assistive-text">Loading</span>
            <div class="slds-spinner__dot-a"></div>
            <div class="slds-spinner__dot-b"></div>
          </div>
        </div>
      </div>
       <!--spinner ends-->
       </body> 
       <script>
        var directionsDisplay;
        var myFunc;
        var temp_1, temp_2;
        function foo() {
            myFunc();
            console.log('in foo function ');
        }



        function myMap() {
            console.log('in start');
            directionsDisplay = new google.maps.DirectionsRenderer();
            var directionsService = new google.maps.DirectionsService();
            var acc_names = [];
            var acc_id = []; 
            var eventList = [];
            var latlist = [];
            var longlist = [];
            try{
                const ev = '{!eventList}';
                if(ev.length > 0){
                    eventList = JSON.parse(ev);
                }   
            }catch(error){
                console.log('Error in Parsing event : ',error);
            }
            console.log('data ', eventList);
            if(eventList.length > 0){
                for(var i in eventList){
                    latlist.push(eventList[i].Event_Latitude__c);
                    longlist.push(eventList[i].Event_Longitude__c);
                }
            }
            console.log('latlist : ',latlist);
            var i = 0;
            var marker;
            navigator.geolocation.getCurrentPosition(function(Position) {
                console.log('in locations');
                lat = Position.coords.latitude;
                long = Position.coords.longitude;
                var locations = [];
                locations.push([lat, long]);
                for (i = 0; i < latlist.length; i++) {
                    locations.push([latlist[i], longlist[i]]);
                }

                acc_names.push("Your Location ");
                acc_id.push('');
                for (i = 0; i < eventList.length; i++) {
                    acc_names.push(eventList[i].Account__r.Name);
                    acc_id.push(eventList[i].Id);
                }

                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 17,
                    center: new google.maps.LatLng(lat, long),
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                });
                var origin = {
                    lat: lat,
                    lng: long
                };
                var destination = {
                    lat: latlist[0],
                    lng: longlist[0]
                };
                if(latlist.length > 0){
                    var service = new google.maps.DistanceMatrixService;
                    service.getDistanceMatrix({
                        origins: [origin],
                        destinations: [destination],
                        travelMode: 'DRIVING',
                        unitSystem: google.maps.UnitSystem.METRIC,
                        avoidHighways: false,
                        avoidTolls: false
                    }, function(response, status) {
                        var checkinData = '{!checkinMapping}';
                        var resData = [];
                        var distance = 1000;
                        if(checkinData.length > 0){
                            resData = JSON.parse(checkinData);
                            for(var i=0 ; i<resData.length;i++){
                                if(resData[i].Name == eventList[0].Account__r.RecordType.DeveloperName){
                                    distance = resData[i].Distance__c;
                                    break;
                                }
                            }
                        }
                        console.log('record type : ',eventList[0].Account__r.RecordType.DeveloperName);
                        console.log('checking data : ',resData);
                        console.log('distance : ',distance);
                        
                    if(response.rows[0].elements[0].status !="ZERO_RESULTS"){
                        console.log('distance : ',response);
                        if (response.rows[0].elements[0].distance.value /1000 > Number(distance)) {
                            if(eventList[0].Out_Of_Office__c == true){
                                document.getElementById('checkIn_flag').value = true;
                            }else{
                                document.getElementById('checkIn_flag').value = false;
                            }
                            console.log('data in false',document.getElementById('checkIn_flag').value );
                            
                        } else {
                            document.getElementById('checkIn_flag').value = true;
                            console.log('data in true',document.getElementById('checkIn_flag').value );
                            
                        } 
                    }  
                        if (status !== 'OK') {
                            alert('Error was: ' + status);
                        } else {

                        }
                    });
                }

                directionsDisplay.setMap(map);
                directionsDisplay.setOptions({
                    suppressMarkers: true
                });
                var request = {
                    "origin": "",
                    "destination": "",
                    "waypoints": [],
                    "travelMode": google.maps.TravelMode.DRIVING
                };
                for (i = 0; i < locations.length; i++) {
                    if (i == 0) {
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(locations[i][0], locations[i][1]),
                            map: map,
                            center: new google.maps.LatLng(locations[i][0], locations[i][1]),
                            animation: google.maps.Animation.DROP,
                            animation: google.maps.Animation.BOUNCE
                        });
                    } else {

                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(locations[i][0], locations[i][1]),
                            map: map,
                            center: new google.maps.LatLng(locations[i][0], locations[i][1]),

                        });

                    }

                    var infowindow = new google.maps.InfoWindow();
                    content = acc_names[i];
                    var visit_id = acc_id[i];

                    infowindow.setContent(content);
                    if (i == 0) {
                        infowindow.setContent(content);
                        temp_1 = infowindow;
                        temp_2 = marker;
                        infowindow.open(map, marker);
                    } else {
                        // infowindow.setContent(content);
                        // infowindow.open(map, marker);
                    }
                    google.maps.event.addListener(marker, 'click', (function(marker, content, infowindow) {
                        return function() {
                            infowindow.setContent(marker.getPosition());
                            infowindow.open(map, marker);
                        };
                    })(marker, marker.getPosition(), infowindow));

                    if (i == 0) request.origin = marker.getPosition();
                    else if (i == 1) request.destination = marker.getPosition();

                }
                setTimeout(function() {
                    map.setCenter(temp_2.getPosition());
                    temp_1.open(map, temp_2);
                }, 2000);

                myFunc = function() {
                    directionsService.route(request, function(response, status) {
                        if (status == google.maps.DirectionsStatus.OK) {
                            directionsDisplay.setDirections(response);
                        } else {

                        }
                    });

                }
                if ({!beatObj.Started__c}) {
                    myFunc();
                }
            });
        }
        ///////////////////// Google Maps Ends ///////////// 

        ////////////////////Angular starts /////////////////

        var App = angular.module('myApp', ['ngStorage']);
        App.controller('myCtrl', function($scope, $rootScope, $window, $timeout, $localStorage) {
            $scope.eventList = [];
            $scope.UserLocation = '';
            try{
                const ev = '{!eventList}';
                if(ev.length > 0){
                    $scope.eventList = JSON.parse(ev);
                }
                
            }catch(error){
                console.log('errror in angualar : ',error);
            } 
            console.log('list in angular : ',$scope.eventList);
            if($scope.eventList.length == 0){
                $('#end_my_day').prop('disabled', true);
                $('#start_my_day').prop('disabled', true);
            }
            navigator.geolocation.getCurrentPosition(function(Position) {
                $scope.UserLocation = Position.coords;
            });

            //Start my day check for start and end day
            if ({!beatObj.Started__c}) {
                console.log('Start method ');
                $('#end_my_day').prop('disabled', false);
                $('#start_my_day').prop('disabled', true);
                var id = $scope.eventList.length > 0 ? $scope.eventList[0].Id : '';
                var customId = '#_i'+id;
                var customIdCheout = '#_o'+id;
                var endM = $scope.eventList.length > 0 ? $scope.eventList[0].Cheked_In__c : false;
                if({!beatObj.Ended__c}){
                    $('#end_my_day').prop('disabled', true);
                }
                setTimeout(function() {
                    $(customId).prop('disabled', false);
                    if(endM){
                        console.log(endM);
                        $(customIdCheout).prop('disabled',false);
                    }   
                    
                }, 1000)
            } else {
                $('#end_my_day').prop('disabled', true);
            }

            //Drag and Drop functionality 
            $('#sortable').sortable({
                handle: '.handle',
                revert:true,
                start:function(event, ui){
                    $('#eventId').val(ui.item[0].children[0].getAttribute('id'));
                    var  dtStart = new Date(ui.item[0].children[0].getAttribute('start'));
                    var  dtEnd = new Date(ui.item[0].children[0].getAttribute('end'));
                    $('#startTime').val($scope.setDateTime(dtStart));
                    $('#endTime').val($scope.setDateTime(dtEnd));
                    $('#clickDate').val(ui.item[0].children[0].getAttribute('start').substr(0,10));
                    console.log('event Id : ',ui.item[0].children[0].getAttribute('id'));
                },
                stop:function(event, ui){
                    $scope.showPopup('eventUpdateModal');
                    $('#revert').on('click',function(){
                        $('#sortable').sortable('cancel');
                    });
                }
            });

            //On drag set the date
            $scope.setDateTime = function(temp){
                console.log('DATES : ',temp);
                var mind = Number(temp.getMinutes());
                var hod = Number(temp.getHours());
                var md;
                var hd;
                if(mind < 10){
                    md = '0'+mind.toString();
                }else{
                    md = mind.toString();
                }
                if(hod< 10){
                    hd = '0'+hod.toString();
                }else{
                    hd = hod.toString();
                }
                return hd+':'+md;
                
            }

            //ShowPopup  Method
            $scope.showPopup = function(id){
                console.log('in showpopup method');
                $('.'+id).removeClass('slds-hide');
            }

            //HidePopup Method 
            $scope.hidePopup = function(id){
                $('.'+id).addClass('slds-hide');
                var temp = $('#proValue').val();
                if(temp == 'End'){
                    $('#proValue').val('');
                    location.reload();
                }
                if(id == 'eventUpdateModal'){
                    console.log('revert function');
                    $('#sortable').sortable('option','revert',true);
                }
            }

            //Start My Day Method
            $scope.startMyDay = function(){
                $('#proMsg').text('You have started your day');
                $scope.showPopup('promt');
                var id = $scope.eventList[0].Id;
                var customId = '#_i'+id;
                $(customId).prop('disabled',false);
                $('#end_my_day').prop('disabled', false);
                $('#start_my_day').prop('disabled', true);
                $scope.json_data = {"UserLatitude":$scope.UserLocation.latitude,"UserLongitude":$scope.UserLocation.longitude};
                BeatPlanMapPageController.startMyDay($scope.json_data,function(result, event){
                    if(result == 'SUCCESS'){
                        foo();
                    }else{
                        alert('There is no beat plan for today');
                    }
                });
            }

            //End My Day method
            $scope.endMyDay = function(){
                if($scope.eventList.length == 0){
                    localStorage.clear();
                    $('.spinner').removeClass('slds-hide');
                    $('#proValue').val('End');
                    $scope.jdata = {"UserLatitude":$scope.UserLocation.latitude,"UserLongitude":$scope.UserLocation.longitude};
                    BeatPlanMapPageController.endMyDay($scope.jdata,function(result,event){
                        if(result == 'FAILED'){
                            $('.spinner').addClass('slds-hide');
                            alert('Failed to end your day.');
                        }else{
                            $('.spinner').addClass('slds-hide');
                            $('#proMsg').text('You have Ended your day');
                            $scope.showPopup('promt');
                        }
                    });
                }else{
                    $('#warn').text('You have events for visit today, Please reschedule them or cancel them.');
                    $('.warning').removeClass('slds-hide');
                }
            }

            //CheckIn Function
            $scope.checkIn = function(id){
                var d = $('#checkIn_flag').val();
                console.log('checkin flag : ',d);
                if(d == 'true'){
                    $('.spinner').removeClass('slds-hide');
                    $scope.data = {"CheckInLat":$scope.UserLocation.latitude,"CheckInLong":$scope.UserLocation.longitude,"eventId":id};
                    BeatPlanMapPageController.checkInMethod($scope.data,function(result, event){
                        if(result[0] == 'SUCCESS'){
                            console.log('result : ',result);
                            window.location.href = result[1]+'/apex/BeatPlanSecondAppPage?id='+id;
                        }else{
                            alert('Checkin Not available now');
                        }
                    });
                }else{
                    $('#warn').text('you are too far away to checkin.');
                    $('.warning').removeClass('slds-hide');
                }
            } 
            //CheckOut Method 
            $scope.checkOut = function(id){
                console.log('In Checkout function : ',id);
                $('.spinner').removeClass('slds-hide');
                $scope.data = {"CheckOutLat":$scope.UserLocation.latitude,"CheckOutLong":$scope.UserLocation.longitude,"eventId":id};
                BeatPlanMapPageController.checkOutMethod($scope.data,function(result,event){
                    window.location.reload();
                });
                
            }

            //Update event
            $scope.updateEvent = function(type){
                $('.spinner').removeClass('slds-hide');
                $scope.data = {'startTime':$('#startTime').val(),'endTime':$('#endTime').val(),
                                'reason':$('#reason').val(),'date':$('#clickDate').val(),'eventId':$('#eventId').val()}
                BeatPlanMapPageController.updateCancelEvent(type,$scope.data,function(result,event){
                    location.reload();
                });
            }
        });    
        $(document).ready(function() {
        
            $('#clickDate').datepicker({
                dateFormat: 'yy-mm-dd'
            });
        });
        function setIcon(){
            setTimeout(function(){
                $("#aljs-nextButton").find("use").attr("xlink:href","{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#right')}");
                $("#aljs-prevButton").find("use").attr("xlink:href","{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#left')}");
            }, 200);
        }
        $(window).load(function() {
            // Animate loader off screen
            $(".se-pre-con").fadeOut("slow");;
        });
       </script>
       <script src='https://maps.googleapis.com/maps/api/js?key=AIzaSyBRYqiA-p-B_zdWU5N4ac7DgEDWFWmZFlM&callback=myMap'></script>
</apex:page>